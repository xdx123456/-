<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<sect2 lang="en" id="git-mergetool(1)">
    <title>git-mergetool(1)</title>
<indexterm>
<primary>git-mergetool(1)</primary>
</indexterm>
<simplesect id="git-mergetool(1)__name">
<title>NAME</title>
<simpara>git-mergetool - Run merge conflict resolution tools to resolve merge conflicts</simpara>
</simplesect>
<simplesect id="git-mergetool(1)__synopsis">
<title>SYNOPSIS</title>
<blockquote>
<literallayout><emphasis>git mergetool</emphasis> [--tool=&lt;tool&gt;] [-y | --[no-]prompt] [&lt;file&gt;&#8230;]</literallayout>
</blockquote>
</simplesect>
<simplesect id="git-mergetool(1)__description">
<title>DESCRIPTION</title>
<simpara>Use <emphasis>git mergetool</emphasis> to run one of several merge utilities to resolve
merge conflicts.  It is typically run after <emphasis>git merge</emphasis>.</simpara>
<simpara>If one or more &lt;file&gt; parameters are given, the merge tool program will
be run to resolve differences on each file (skipping those without
conflicts).  Specifying a directory will include all unresolved files in
that path.  If no &lt;file&gt; names are specified, <emphasis>git mergetool</emphasis> will run
the merge tool program on every file with merge conflicts.</simpara>
</simplesect>
<simplesect id="git-mergetool(1)__options">
<title>OPTIONS</title>
<variablelist>
<varlistentry>
<term>
-t &lt;tool&gt;
</term>
<term>
--tool=&lt;tool&gt;
</term>
<listitem>
<simpara>
        Use the merge resolution program specified by &lt;tool&gt;.
        Valid values include emerge, gvimdiff, kdiff3,
        meld, vimdiff, and tortoisemerge. Run <emphasis>git mergetool --tool-help</emphasis>
        for the list of valid &lt;tool&gt; settings.
</simpara>
<simpara>If a merge resolution program is not specified, <emphasis>git mergetool</emphasis>
will use the configuration variable <emphasis>merge.tool</emphasis>.  If the
configuration variable <emphasis>merge.tool</emphasis> is not set, <emphasis>git mergetool</emphasis>
will pick a suitable default.</simpara>
<simpara>You can explicitly provide a full path to the tool by setting the
configuration variable <emphasis>mergetool.&lt;tool&gt;.path</emphasis>. For example, you
can configure the absolute path to kdiff3 by setting
<emphasis>mergetool.kdiff3.path</emphasis>. Otherwise, <emphasis>git mergetool</emphasis> assumes the
tool is available in PATH.</simpara>
<simpara>Instead of running one of the known merge tool programs,
<emphasis>git mergetool</emphasis> can be customized to run an alternative program
by specifying the command line to invoke in a configuration
variable <emphasis>mergetool.&lt;tool&gt;.cmd</emphasis>.</simpara>
<simpara>When <emphasis>git mergetool</emphasis> is invoked with this tool (either through the
<emphasis>-t</emphasis> or <emphasis>--tool</emphasis> option or the <emphasis>merge.tool</emphasis> configuration
variable) the configured command line will be invoked with <emphasis>$BASE</emphasis>
set to the name of a temporary file containing the common base for
the merge, if available; <emphasis>$LOCAL</emphasis> set to the name of a temporary
file containing the contents of the file on the current branch;
<emphasis>$REMOTE</emphasis> set to the name of a temporary file containing the
contents of the file to be merged, and <emphasis>$MERGED</emphasis> set to the name
of the file to which the merge tool should write the result of the
merge resolution.</simpara>
<simpara>If the custom merge tool correctly indicates the success of a
merge resolution with its exit code, then the configuration
variable <emphasis>mergetool.&lt;tool&gt;.trustExitCode</emphasis> can be set to <emphasis>true</emphasis>.
Otherwise, <emphasis>git mergetool</emphasis> will prompt the user to indicate the
success of the resolution after the custom tool has exited.</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
--tool-help
</term>
<listitem>
<simpara>
        Print a list of merge tools that may be used with <emphasis>--tool</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
-y
</term>
<term>
--no-prompt
</term>
<listitem>
<simpara>
        Don't prompt before each invocation of the merge resolution
        program.
        This is the default if the merge resolution program is
        explicitly specified with the <emphasis>--tool</emphasis> option or with the
        <emphasis>merge.tool</emphasis> configuration variable.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
--prompt
</term>
<listitem>
<simpara>
        Prompt before each invocation of the merge resolution program
        to give the user a chance to skip the path.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
-g
</term>
<term>
--gui
</term>
<listitem>
<simpara>
        When <emphasis>git-mergetool</emphasis> is invoked with the <emphasis>-g</emphasis> or <emphasis>--gui</emphasis> option
        the default merge tool will be read from the configured
        <emphasis>merge.guitool</emphasis> variable instead of <emphasis>merge.tool</emphasis>. If
        <emphasis>merge.guitool</emphasis> is not set, we will fallback to the tool
        configured under <emphasis>merge.tool</emphasis>.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
--no-gui
</term>
<listitem>
<simpara>
        This overrides a previous <emphasis>-g</emphasis> or <emphasis>--gui</emphasis> setting and reads the
        default merge tool will be read from the configured <emphasis>merge.tool</emphasis>
        variable.
</simpara>
</listitem>
</varlistentry>
<varlistentry>
<term>
-O&lt;orderfile&gt;
</term>
<listitem>
<simpara>
        Process files in the order specified in the
        &lt;orderfile&gt;, which has one shell glob pattern per line.
        This overrides the <emphasis>diff.orderFile</emphasis> configuration variable
        (see <xref linkend="git-config(1)" />).  To cancel <emphasis>diff.orderFile</emphasis>,
        use <emphasis>-O/dev/null</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</simplesect>
<simplesect id="git-mergetool(1)__temporary_files">
<title>TEMPORARY FILES</title>
<simpara><emphasis>git mergetool</emphasis> creates <emphasis>*.orig</emphasis> backup files while resolving merges.
These are safe to remove once a file has been merged and its
<emphasis>git mergetool</emphasis> session has completed.</simpara>
<simpara>Setting the <emphasis>mergetool.keepBackup</emphasis> configuration variable to <emphasis>false</emphasis>
causes <emphasis>git mergetool</emphasis> to automatically remove the backup as files
are successfully merged.</simpara>
</simplesect>
<simplesect id="git-mergetool(1)__git">
<title>GIT</title>
<simpara>Part of the <xref linkend="git(1)" /> suite</simpara>
</simplesect>
</sect2>
